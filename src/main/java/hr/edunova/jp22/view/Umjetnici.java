/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.edunova.jp22.view;

import com.github.lgooddatepicker.components.DatePickerSettings;
import hr.edunova.jp22.controller.ObradaAlbum;
import hr.edunova.jp22.controller.ObradaClan;
import hr.edunova.jp22.controller.ObradaUmjetnik;
import hr.edunova.jp22.model.Album;
import hr.edunova.jp22.model.Clan;
import hr.edunova.jp22.model.Umjetnik;
import hr.edunova.jp22.utility.EdunovaException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import javax.swing.DefaultListModel;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Bole
 */
public class Umjetnici extends javax.swing.JFrame {

    private ObradaUmjetnik obrada;
    private Umjetnik entitet;
    private ObradaClan obradaC;
    private ObradaAlbum obradaA;

    /**
     * Creates new form Umjetnici
     */
    public Umjetnici() {
        initComponents();
        obradaC = new ObradaClan();
        obradaA = new ObradaAlbum();
        lstPridruzenClan.setCellRenderer(new ClanCellRenderer());
        lstPridruzenAlbum.setCellRenderer(new AlbumCellRenderer());

        DatePickerSettings dps = new DatePickerSettings(new Locale("hr", "HR"));
        DatePickerSettings dps1 = new DatePickerSettings(new Locale("hr", "HR"));
        dps.setFormatForDatesCommonEra("yyyy-MM-dd");
        dps1.setFormatForDatesCommonEra("yyyy-MM-dd");
        dpiDatumP.setSettings(dps);
        dpiDatumK.setSettings(dps1);

        lstUmjetnik.setCellRenderer(new UmjetniciCellRenderer());
        obrada = new ObradaUmjetnik();
        ucitajPodatke();
        grananjePodzanra();
        txtIme.setDocument(new JTextFieldLimit(50));
        txtMjesto.setDocument(new JTextFieldLimit(50));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnNazad = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstUmjetnik = new javax.swing.JList<>();
        jPanel = new javax.swing.JPanel();
        txtIme = new javax.swing.JTextField();
        txtMjesto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnDodaj = new javax.swing.JButton();
        btnPromjeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        dpiDatumP = new com.github.lgooddatepicker.components.DatePicker();
        dpiDatumK = new com.github.lgooddatepicker.components.DatePicker();
        cmbZanr = new javax.swing.JComboBox<>();
        cmbPodzanr = new javax.swing.JComboBox<>();
        tabGlavni = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        txtTraziAlbum = new javax.swing.JTextField();
        btnTraziAlbum = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        lstPridruzenAlbum = new javax.swing.JList<>();
        btnPridruziAlbum = new javax.swing.JButton();
        btnUkloniAlbum = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        lstTraziAlbum = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        btnTraziClan = new javax.swing.JButton();
        btnPridruziClan = new javax.swing.JButton();
        btnUkloniClan = new javax.swing.JButton();
        txtTraziClan = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        lstPridruzenClan = new javax.swing.JList<>();
        jScrollPane9 = new javax.swing.JScrollPane();
        lstTraziClan = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Umjetnici");

        jPanel2.setBackground(new java.awt.Color(0, 0, 153));
        jPanel2.setForeground(new java.awt.Color(51, 102, 255));

        btnNazad.setText("Idi nazad");
        btnNazad.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnNazad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNazadActionPerformed(evt);
            }
        });

        lstUmjetnik.setForeground(new java.awt.Color(0, 0, 153));
        lstUmjetnik.setToolTipText("");
        lstUmjetnik.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstUmjetnikValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstUmjetnik);

        jPanel.setBackground(new java.awt.Color(0, 0, 153));

        txtMjesto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMjestoKeyTyped(evt);
            }
        });

        jLabel1.setText("Podatci:");
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("Ime:");
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("Žanr:");
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setText("Podžanr:");
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setText("Mjesto:");
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));

        jLabel6.setText("Datum kraja:");
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));

        jLabel7.setText("Datum početka:");
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));

        btnDodaj.setText("Dodaj");
        btnDodaj.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnPromjeni.setText("Promjeni");
        btnPromjeni.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnPromjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromjeniActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obriši");
        btnObrisi.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        dpiDatumP.setBackground(new java.awt.Color(0, 0, 153));

        dpiDatumK.setBackground(new java.awt.Color(0, 0, 153));

        cmbZanr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Blues", "Metal", "Hip Hop", "Folk", "Jazz", "Pop", "Punk", "Rock", "EDM", "Country", "Classical Music" }));

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelLayout.createSequentialGroup()
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnDodaj)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPromjeni)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnObrisi)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmbPodzanr, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbZanr, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dpiDatumP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMjesto)
                            .addComponent(txtIme)
                            .addComponent(dpiDatumK, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelLayout.createSequentialGroup()
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbZanr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbPodzanr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel5)
                .addGap(7, 7, 7)
                .addComponent(txtMjesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addGap(10, 10, 10)
                .addComponent(dpiDatumP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dpiDatumK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnPromjeni)
                    .addComponent(btnObrisi))
                .addGap(20, 20, 20))
        );

        tabGlavni.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tabGlavni.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(0, 0, 153));

        btnTraziAlbum.setText("¤");
        btnTraziAlbum.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnTraziAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraziAlbumActionPerformed(evt);
            }
        });

        lstPridruzenAlbum.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstPridruzenAlbumValueChanged(evt);
            }
        });
        jScrollPane10.setViewportView(lstPridruzenAlbum);

        btnPridruziAlbum.setText(">");
        btnPridruziAlbum.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnPridruziAlbum.setForeground(new java.awt.Color(0, 0, 102));
        btnPridruziAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPridruziAlbumActionPerformed(evt);
            }
        });

        btnUkloniAlbum.setText("<");
        btnUkloniAlbum.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnUkloniAlbum.setForeground(new java.awt.Color(0, 0, 102));
        btnUkloniAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUkloniAlbumActionPerformed(evt);
            }
        });

        jScrollPane11.setViewportView(lstTraziAlbum);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Pridruženi albumi");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPridruziAlbum)
                            .addComponent(btnUkloniAlbum, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtTraziAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTraziAlbum)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addComponent(btnPridruziAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(btnUkloniAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 129, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTraziAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTraziAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                    .addComponent(jScrollPane10)))
        );

        tabGlavni.addTab("Albumi", jPanel3);

        jPanel1.setBackground(new java.awt.Color(0, 0, 153));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Pridruženi članovi");
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));

        btnTraziClan.setText("¤");
        btnTraziClan.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnTraziClan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraziClanActionPerformed(evt);
            }
        });

        btnPridruziClan.setText(">");
        btnPridruziClan.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnPridruziClan.setForeground(new java.awt.Color(0, 0, 102));
        btnPridruziClan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPridruziClanActionPerformed(evt);
            }
        });

        btnUkloniClan.setText("<");
        btnUkloniClan.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnUkloniClan.setForeground(new java.awt.Color(0, 0, 102));
        btnUkloniClan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUkloniClanActionPerformed(evt);
            }
        });

        lstPridruzenClan.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstPridruzenClanValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(lstPridruzenClan);

        jScrollPane9.setViewportView(lstTraziClan);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnUkloniClan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPridruziClan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtTraziClan, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTraziClan)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTraziClan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTraziClan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(btnPridruziClan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addComponent(btnUkloniClan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(129, Short.MAX_VALUE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING)))
        );

        tabGlavni.addTab("Članovi", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnNazad, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabGlavni))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNazad)
                .addGap(19, 19, 19))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tabGlavni)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNazadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNazadActionPerformed
        Izbornik izbornik = new Izbornik();
        izbornik.setLocationRelativeTo(null);
        izbornik.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnNazadActionPerformed

    private void lstUmjetnikValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstUmjetnikValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }

        entitet = lstUmjetnik.getSelectedValue();
        if (entitet == null) {
            return;
        }

        if (entitet.getDatumpocetka() != null) {
            dpiDatumP.setDate(entitet.getDatumpocetka().toInstant()
                    .atZone(ZoneId.systemDefault())
                    .toLocalDate());
        }

        if (entitet.getDatumkraja() != null) {
            dpiDatumK.setDate(entitet.getDatumkraja().toInstant()
                    .atZone(ZoneId.systemDefault())
                    .toLocalDate());
        }

        txtIme.setText(entitet.getIme());
        cmbZanr.setSelectedItem(entitet.getZanr());
        cmbPodzanr.setSelectedItem(entitet.getPodzanr());
        txtMjesto.setText(entitet.getMjesto());

        DefaultListModel<Clan> m = new DefaultListModel<>();
        for (Clan p : entitet.getClanovi()) {
            m.addElement(p);
        }
        lstPridruzenClan.setModel(m);

        DefaultListModel<Album> n = new DefaultListModel<>();
        for (Album o : entitet.getAlbumi()) {
            n.addElement(o);
        }
        lstPridruzenAlbum.setModel(n);
    }//GEN-LAST:event_lstUmjetnikValueChanged

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        entitet = new Umjetnik();
        try {
            postaviVrijednostiUEntitet();
        } catch (ParseException ex) {
            Logger.getLogger(Umjetnici.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            obrada.create();
            ucitajPodatke();
            ocistiPolja();
        } catch (EdunovaException ex) {
            JOptionPane.showMessageDialog(null, ex.getPoruka());
        }

    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnPromjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromjeniActionPerformed
        entitet = lstUmjetnik.getSelectedValue();
        if (entitet == null) {
            JOptionPane.showMessageDialog(null, "Niste izabrali umjetnika.");
            return;
        }

        try {
            postaviVrijednostiUEntitet();
        } catch (ParseException ex) {
            Logger.getLogger(Umjetnici.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            obrada.update();
            ucitajPodatke();
            ocistiPolja();

        } catch (EdunovaException ex) {
            JOptionPane.showMessageDialog(null, ex.getPoruka());
        }
    }//GEN-LAST:event_btnPromjeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        entitet = lstUmjetnik.getSelectedValue();
        if (entitet == null) {
            JOptionPane.showMessageDialog(null, "Niste izabrali umjetnika.");
            return;
        }

        obrada.setEntitet(entitet);

        try {
            obrada.delete();
            ucitajPodatke();
            ocistiPolja();
        } catch (EdunovaException ex) {
            JOptionPane.showMessageDialog(null, ex.getPoruka());
        }

        try {
            DefaultListModel listModel1 = (DefaultListModel) lstTraziClan.getModel();
            listModel1.removeAllElements();
        } catch (Exception e) {
        }
        try {
            DefaultListModel listModel2 = (DefaultListModel) lstPridruzenClan.getModel();
            listModel2.removeAllElements();
        } catch (Exception e) {
        }
        try {
            DefaultListModel listModel1 = (DefaultListModel) lstTraziAlbum.getModel();
            listModel1.removeAllElements();
        } catch (Exception e) {
        }
        try {
            DefaultListModel listModel2 = (DefaultListModel) lstPridruzenAlbum.getModel();
            listModel2.removeAllElements();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void txtMjestoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMjestoKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isLetter(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtMjestoKeyTyped

    private void btnTraziClanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraziClanActionPerformed
        ucitajClanove();
        lstTraziClan.setCellRenderer(new ClanCellRenderer());
    }//GEN-LAST:event_btnTraziClanActionPerformed

    private void btnPridruziClanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPridruziClanActionPerformed
        entitet = lstUmjetnik.getSelectedValue();
        if (entitet == null) {
            JOptionPane.showMessageDialog(null, "Niste izabrali umjetnika.");
            return;
        }
        if (lstTraziClan.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(null, "Niste izabrali člana.");
            return;
        }

        DefaultListModel<Clan> m;
        try {
            m = (DefaultListModel<Clan>) lstPridruzenClan.getModel();
            m.get(0).toString();
        } catch (Exception e) {
            m = new DefaultListModel<>();
            lstPridruzenClan.setModel(m);
        }
        boolean postoji;
        for (Clan p : lstTraziClan.getSelectedValuesList()) {
            postoji = false;
            for (int i = 0; i < m.size(); i++) {
                if (p.getId().equals(m.get(i).getId())) {
                    postoji = true;
                    break;
                }
            }
            if (!postoji) {
                m.addElement(p);
            } else {
                JOptionPane.showMessageDialog(null, "Član je već pridružen.");
            }

        }
        lstPridruzenClan.repaint();
    }//GEN-LAST:event_btnPridruziClanActionPerformed

    private void btnUkloniClanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUkloniClanActionPerformed
        entitet = lstUmjetnik.getSelectedValue();
        if (entitet == null) {
            JOptionPane.showMessageDialog(null, "Niste izabrali umjetnika.");
            return;
        }
        if (lstPridruzenClan.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(null, "Niste izabrali člana.");
            return;
        }

        DefaultListModel<Clan> m;
        try {
            m = (DefaultListModel<Clan>) lstPridruzenClan.getModel();
        } catch (Exception e) {
            return;
        }

        for (Clan p : lstPridruzenClan.getSelectedValuesList()) {
            for (int i = 0; i < m.size(); i++) {
                if (p.getId().equals(m.getElementAt(i).getId())) {
                    m.removeElementAt(i);
                    break;
                }
            }
        }

        lstPridruzenClan.repaint();
    }//GEN-LAST:event_btnUkloniClanActionPerformed

    private void lstPridruzenClanValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstPridruzenClanValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_lstPridruzenClanValueChanged

    private void btnTraziAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraziAlbumActionPerformed
        ucitajAlbume();
        lstTraziAlbum.setCellRenderer(new AlbumCellRenderer());
    }//GEN-LAST:event_btnTraziAlbumActionPerformed

    private void lstPridruzenAlbumValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstPridruzenAlbumValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_lstPridruzenAlbumValueChanged

    private void btnPridruziAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPridruziAlbumActionPerformed
        entitet = lstUmjetnik.getSelectedValue();

        if (entitet == null) {
            JOptionPane.showMessageDialog(null, "Niste izabrali umjetnika.");
            return;
        }
        if (lstTraziAlbum.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(null, "Niste izabrali album.");
            return;
        }

        DefaultListModel<Album> m;
        try {
            m = (DefaultListModel<Album>) lstPridruzenAlbum.getModel();
            m.get(0).toString();
        } catch (Exception e) {
            m = new DefaultListModel<>();
            lstPridruzenAlbum.setModel(m);
        }
        boolean postoji;
        for (Album p : lstTraziAlbum.getSelectedValuesList()) {
            postoji = false;
            for (int i = 0; i < m.size(); i++) {
                if (p.getId().equals(m.get(i).getId())) {
                    postoji = true;
                    break;
                }
            }
            if (!postoji) {
                m.addElement(p);
            } else {
                JOptionPane.showMessageDialog(null, "Album je već pridružen.");
            }

        }
        lstPridruzenAlbum.repaint();
    }//GEN-LAST:event_btnPridruziAlbumActionPerformed

    private void btnUkloniAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUkloniAlbumActionPerformed
        entitet = lstUmjetnik.getSelectedValue();
        if (entitet == null) {
            JOptionPane.showMessageDialog(null, "Niste izabrali umjetnika.");
            return;
        }
        if (lstPridruzenAlbum.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(null, "Niste izabrali album.");
            return;
        }

        DefaultListModel<Album> m;
        try {
            m = (DefaultListModel<Album>) lstPridruzenAlbum.getModel();
        } catch (Exception e) {
            return;
        }

        for (Album p : lstPridruzenAlbum.getSelectedValuesList()) {
            for (int i = 0; i < m.size(); i++) {
                if (p.getId().equals(m.getElementAt(i).getId())) {
                    m.removeElementAt(i);
                    break;
                }
            }
        }

        lstPridruzenAlbum.repaint();
    }//GEN-LAST:event_btnUkloniAlbumActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnNazad;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPridruziAlbum;
    private javax.swing.JButton btnPridruziClan;
    private javax.swing.JButton btnPromjeni;
    private javax.swing.JButton btnTraziAlbum;
    private javax.swing.JButton btnTraziClan;
    private javax.swing.JButton btnUkloniAlbum;
    private javax.swing.JButton btnUkloniClan;
    private javax.swing.JComboBox<String> cmbPodzanr;
    private javax.swing.JComboBox<String> cmbZanr;
    private com.github.lgooddatepicker.components.DatePicker dpiDatumK;
    private com.github.lgooddatepicker.components.DatePicker dpiDatumP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JList<Album> lstPridruzenAlbum;
    private javax.swing.JList<Clan> lstPridruzenClan;
    private javax.swing.JList<Album> lstTraziAlbum;
    private javax.swing.JList<Clan> lstTraziClan;
    private javax.swing.JList<Umjetnik> lstUmjetnik;
    private javax.swing.JTabbedPane tabGlavni;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtMjesto;
    private javax.swing.JTextField txtTraziAlbum;
    private javax.swing.JTextField txtTraziClan;
    // End of variables declaration//GEN-END:variables

    private void ucitajPodatke() {

        DefaultListModel<Umjetnik> m = new DefaultListModel<>();
        obrada.getPodaci().forEach(s -> m.addElement(s));
        lstUmjetnik.setModel(m);

    }

    private void ocistiPolja() {
        txtIme.setText("");
        cmbZanr.setSelectedIndex(0);
        cmbPodzanr.setSelectedIndex(0);
        txtMjesto.setText("");
        dpiDatumP.setDateToToday();
        dpiDatumK.setDateToToday();
    }

    private void postaviVrijednostiUEntitet() throws ParseException {

        entitet.setClanovi(new ArrayList<>());

        DefaultListModel<Clan> m = (DefaultListModel<Clan>) lstPridruzenClan.getModel();
        for (int i = 0; i < m.size(); i++) {
            entitet.getClanovi().add(m.getElementAt(i));
        }

        entitet.setAlbumi(new ArrayList<>());

        DefaultListModel<Album> n = (DefaultListModel<Album>) lstPridruzenAlbum.getModel();
        for (int j = 0; j < n.size(); j++) {
            entitet.getAlbumi().add(n.getElementAt(j));
        }

        entitet.setIme(txtIme.getText());
        entitet.setZanr((String) cmbZanr.getSelectedItem());
        entitet.setPodzanr((String) cmbPodzanr.getSelectedItem());
        entitet.setMjesto(txtMjesto.getText());
        if (dpiDatumP.getDate() != null) {
            entitet.setDatumpocetka(Date.from(dpiDatumP.getDate().atStartOfDay()
                    .atZone(ZoneId.systemDefault())
                    .toInstant()));
        }
        if (dpiDatumK.getDate() != null) {
            entitet.setDatumkraja(Date.from(dpiDatumK.getDate().atStartOfDay()
                    .atZone(ZoneId.systemDefault())
                    .toInstant()));
        }

        obrada.setEntitet(entitet);
        try {
            DefaultListModel listModel1 = (DefaultListModel) lstTraziClan.getModel();
            listModel1.removeAllElements();
        } catch (Exception e) {
        }
        try {
            DefaultListModel listModel2 = (DefaultListModel) lstPridruzenClan.getModel();
            listModel2.removeAllElements();
        } catch (Exception e) {
        }
        try {
            DefaultListModel listModel1 = (DefaultListModel) lstTraziAlbum.getModel();
            listModel1.removeAllElements();
        } catch (Exception e) {
        }
        try {
            DefaultListModel listModel2 = (DefaultListModel) lstPridruzenAlbum.getModel();
            listModel2.removeAllElements();
        } catch (Exception e) {
        }
    }

    public void grananjePodzanra() {

        cmbZanr.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                switch (cmbZanr.getItemAt(cmbZanr.getSelectedIndex())) {
                    case "Blues":
                        String[] array1 = {"Soul", "Piano", "Acoustic", "Boogie Woogie", "Vaudeville", "Jump", "Chicago",
                            "Swamp"};
                        DefaultComboBoxModel model1 = new DefaultComboBoxModel(array1);
                        cmbPodzanr.setModel(model1);
                        break;
                    case "Metal":
                        String[] array2 = {"Doom", "Heavy", "Industrial", "Power", "Stoner", "Sludge", "Grindcore", "Death",
                            "Progressive", "Speed", "Symphonic", "Neoclassical", "Metalcore", "Drone"};
                        DefaultComboBoxModel model2 = new DefaultComboBoxModel(array2);
                        cmbPodzanr.setModel(model2);
                        break;
                    case "Hip Hop":
                        String[] array3 = {"Abstract", "Trap", "East Coast", "Conscious", "Experimental", "Bounce", "Cloud Rap",
                            "Instrumental", "Southern", "West Coast", "Conscious", "UK", "Memphis Rap", "Hardcore"};
                        DefaultComboBoxModel model3 = new DefaultComboBoxModel(array3);
                        cmbPodzanr.setModel(model3);
                        break;
                    case "Folk":
                        String[] array4 = {"Traditional", "Contemporary", "Bard Music", "Baroque", "American Primitivism", "Neofolk",
                            "Dark", "Throat Singing"};
                        DefaultComboBoxModel model4 = new DefaultComboBoxModel(array4);
                        cmbPodzanr.setModel(model4);
                        break;
                    case "Jazz":
                        String[] array5 = {"Acid", "Avant Garde", "Gypsy", "Fusion", "Swing", "Soul", "Post Bop", "Spiritual",
                            "Revival", "Free", "Flamenco"};
                        DefaultComboBoxModel model5 = new DefaultComboBoxModel(array5);
                        cmbPodzanr.setModel(model5);
                        break;
                    case "Pop":
                        String[] array6 = {"Synthpop", "Psychedelic", "Progressive", "J Pop", "Indie", "Bubblegum", "Art", "Bitpop",
                            "Boy Band"};
                        DefaultComboBoxModel model6 = new DefaultComboBoxModel(array6);
                        cmbPodzanr.setModel(model6);
                        break;
                    case "Punk":
                        String[] array7 = {"Post Hardcore", "Emo", "Post", "Proto", "Art", "Digital Hardcore", "Screamo", "Coldwave",
                            "Ska", "Skate", "Riot Grrrl"};
                        DefaultComboBoxModel model7 = new DefaultComboBoxModel(array7);
                        cmbPodzanr.setModel(model7);
                        break;
                    case "Rock":
                        String[] array8 = {"Alternative", "Comedy", "Emo", "Hard", "Glam", "Garage", "Math", "New Wave", "Indie",
                            "Noise", "Post", "Progressive", "Psychedelic", "Rap", "Opera", "Surf", "Symphonic", "Rock and Roll"};
                        DefaultComboBoxModel model8 = new DefaultComboBoxModel(array8);
                        cmbPodzanr.setModel(model8);
                        break;
                    case "EDM":
                        String[] array9 = {"Electropop", "Glitch", "Grime", "IDM", "Disco", "Folktronica", "Nu Jazz", "Vaportrap",
                            "Wave", "Nightcore"};
                        DefaultComboBoxModel model9 = new DefaultComboBoxModel(array9);
                        cmbPodzanr.setModel(model9);
                        break;
                    case "Country":
                        String[] array10 = {"Americana", "Honky Tonk", "Western Swing", "Contemporary", "Traditional",
                            "Alt", "Progressive"};
                        DefaultComboBoxModel model10 = new DefaultComboBoxModel(array10);
                        cmbPodzanr.setModel(model10);
                        break;
                    case "Classical Music":
                        String[] array11 = {"Modern", "Pibroch", "Slashmaqam", "Cinematic", "Western", "Latin", "Brazilian",
                            "Arabic", "Asian", "Persian"};
                        DefaultComboBoxModel model11 = new DefaultComboBoxModel(array11);
                        cmbPodzanr.setModel(model11);
                        break;
                    default:
                        String[] array12 = {""};
                        DefaultComboBoxModel model12 = new DefaultComboBoxModel(array12);
                        cmbPodzanr.setModel(model12);
                        break;
                }
            }
        });
    }

    private void ucitajClanove() {
        DefaultListModel<Clan> m = new DefaultListModel<>();

        obradaC.getPodaci(txtTraziClan.getText()).forEach(s -> m.addElement(s));

        lstTraziClan.setModel(m);
        if (lstTraziClan.getModel().getSize() == 0) {
            JOptionPane.showMessageDialog(null, "Nije pronađen niti jedan član.");
        }
    }

    private void ucitajAlbume() {
        DefaultListModel<Album> m = new DefaultListModel<>();

        obradaA.getPodaci(txtTraziAlbum.getText()).forEach(s -> m.addElement(s));

        lstTraziAlbum.setModel(m);
        if (lstTraziAlbum.getModel().getSize() == 0) {
            JOptionPane.showMessageDialog(null, "Nije pronađen niti jedan album.");
        }
    }
}
